#+------------------------------------------------------------------------------------------------------+#
#|                                                                                                      |#
#|                                                                                                      |#
#|                                            J P R E M I U M                                           |#
#|                                        C O N F I G U R A T I O N                                     |#
#|                                                                                                      |#
#|                                                                                                      |#
#+------------------------------------------------------------------------------------------------------+#

# JPremium currently supports SQLite, MySQL and MariaDB databases.
# When JPremium cannot connect your database, issues are always produced by your database or the connection between your BungeeCord and your database!
# If you have issues, please see this wiki page: https://github.com/Jakubson/JPremiumCleared/wiki#database-issues
storageType: SQLITE # SQLITE, MYSQL, MARIADB
storageHost: ''
storagePort: 3306
storageDatabase: ''
storageUser: ''
storagePassword: ''
storageProperties: []

# Storage connection pool settings.
# Do not change these settings unless you know what you are doing!
connectionPoolSize: 10
connectionPoolIdle: 10
connectionPoolTimeout: 5000
connectionPoolLifetime: 1800000
connectionKeepAliveTime: 0

# The mail server which is used to send mails.
# Please enter data only if you want to use the passwords recovery system.
# If you do not want to use it, please also disable the change mail address and recovery password commands.
mailHost: ''
mailPort: 25
mailUser: ''
mailPassword: ''
mailName: Your server name
mailUseTLS: true

# The access token which is used to verify connections on your Spigot servers whether connections come from your BungeeCord.
# Please enter fully random unique value! Not: 'your-server-name-jpremium'!
# The same token you have to enter on all your Spigot servers.
accessToken: '{{ACCESS_TOKEN}}'

# The limbo server names in your BungeeCord network.
# Not authorised players are redirected to the servers.
# If empty, JPremium will not redirect not authorised players.
limboServerNames: [limbo]

# The main server names in your BungeeCord network.
# Authorised players are redirected to the servers.
# If empty, JPremium will not redirect authorised players.
mainServerNames: [main]

# What unique ids should JPremium assign for players.
# There are three options (REAL (recommended), OFFLINE, FIXED (deprecated)) and each option has different restrictions.
# It is not recommended changing this option when some players are already registered.
# For more information, please read this wiki page: https://github.com/Jakubson/JPremiumCleared/wiki#fixed-unique-ids
uniqueIdsType: REAL

# If a player with a premium nickname disconnects on the login stage, should JPremium recognise the player as cracked.
# This option doesn't affect when 'registerOnWebsite' is enabled.
secondLoginCracked: false

# Should JPremium force new cracked players to register at your website.
registerOnWebsite: false

# Should JPremium register new premium players.
# When it is enabled, cracked players with premium nickname cannot join to your server unless you enable the 'secondLoginCracked' option.
registerPremiumUsers: true

# This frature works only on Velocity! Since Minecraft 1.19.1, premium players send their online UUID in the handshake. Non-premium player don't sent it or send offline one.
# Using that data, JPremium can distinguish (on the first join) premium players and non-premium players who only use premium nicknames (they won't get 'Invalid session', etc.).
# In other words: When a non-premium player uses a premium username which isn't taken on the server, they will be able to join without 'Invalid session' message and real premium players will be automatically registered.
# This feature is in beta and works only on Velocity and for players who use Minecraft 1.19.1 or above! If a player use old version, then fallback to other method detection like 'secondLoginCracked'.
detectPremiumUniqueIdsInHandshake: false

# Should JPremium redirect a player to their last server where they were before quit.
lastServerRedirection: false

# Some cracked launcher do not handle titles and chat messages which are sent immediately after join, so you can delay them (in milliseconds).
delayTitlesAfterJoinTime: 1000

# Should JPremium recognise Bedrock players and alters their unique ids to bedrock.
# Works only when you install GeyserMC 2.0 and Floodgate 2.0 on your server.
# For more information, please read this wiki page: https://github.com/Jakubson/JPremiumCleared/wiki#bedrock-support
floodgateSupport: false

# Should JPremium verify captcha codes which are entered by cracked players.
# If you set disable it, please also set 'captchaMapSlot' to '-1' in your JPremium configuration files on all your Spigot servers.
verifyCaptchaCode: true

# Should JPremium require to confirm a password in the register, change password and create password commands?
# If you enable it, please do not forget to change the usage messages in the message file.
confirmPassword: false

# Should JPremium require to execute /confirm command when a player executes a risky command (/unregister, /premium, /cracked).
riskyCommandsConfirmation: true

# !!! THIS FEATURE IS DEPRECATED DUE TO ITS UNRELIABILITY !!!
# !!! YOU USE IT AT YOUR OW RISK !!!
# Should JPremium use an external API server when the API server cannot process requests to verify players nicknames.
# The external API sometimes may return wrong responses!
# The legacy resolver needs to be activated to use the backup server.
useBackupServer: false

# Should JPremium use the old resolver which uses only api.mojang.com?
useLegacyResolver: false

# The email subject which is sent when a player requests password recovery.
passwordRecoverySubject: The password recovery

# A server name which is used for generating a TOTP auth link.
# The server name is shown in a TOTP application.
serverName: Your server name

# The maximum attempts of login tries before a cracked player will be disconnected.
# Set to 0 to disable.
maximumLoginTriesBeforeDisconnection: 5

# The ban duration of a player's address after reaching 'maximumLoginTriesBeforeDisconnection' (in minutes).
# Minimum value is 1. To disable, set 'maximumLoginTriesBeforeDisconnection' to 0.
addressBanDuration: 10

# The maximum quantity of user profiles which cracked players can register using the same IP addresses.
# When 'registerPremiumUsers' option is enabled, the limit is not apply for premium players.
maximumUserProfilesPerAddress: 0

# The maximum time (in seconds) which cracked players have for login or register.
maximumAuthorisationTime: 90

# The session time (in minutes) which is started when a cracked player executes the /startsession command.
# Sessions work only when a cracked player has the same IP address. It is not recommended to set the value too high.
manuallySessionTime: 720

# The session time (in minutes) which is automatically started when a cracked player logins or registers.
automaticSessionTime: 10

# The delay time (in minutes) between recovering a password by a player.
# Minimum value is 1.
recoveringPasswordDelay: 60

# The absent time (is days) after which cracked players are automatically unregistered.
automaticUnregisterTime: 0

# The hashing algorithm which is used to hash cracked player passwords.
# There are two options: SHA256, SHA512, BCRYPT.
# All the algorithms are salted.
passwordHashingAlgorithm: SHA256

# Should JPremium re-hash a player's password during authentication when it uses a different algorithm than defined in 'passwordHashingAlgorithm'.
rehashPasswordWhenUsingDifferentAlgorithm: true

# The safe password pattern (in regular expression). Cracked player passwords have to match to it.
safePasswordPattern: '[\S]{6,25}'

# The username pattern which players can have.
# The prefix is not applied to bedrock players.
# It is very important not to add the Floodgate prefix to the pattern!
allowedUsernamePattern: '[a-zA-Z0-9_]{2,16}'

# List of account UUIDs which cannot be managed by staff commands.
# These accounts can be only managed by themselves or from the console.
# UUIDs have to be in the full format (with dashes) like: 5ea61e81-30c1-4c2e-84c8-776010fb95c0.
protectedAccounts: []

# The commands which not logged cracked players can execute.
logoutUserCommands: [login, register, requestpasswordrecovery, confirmpasswordrecovery, l]

# The command aliases.
# To add more aliases for commands, please add new values using this format '<command>CommandAliases: [<alias>, <alias>, ...]', for example: 'changePasswordCommandAliases: [chpass]'.
# If you want to disable a command, you have to enter the command to the 'disabled_commands' list in your BungeeCord configuration file.
loginCommandAliases: [l]
